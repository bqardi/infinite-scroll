@mixin triangle($size, $color, $position, $inset: false) {
    position: absolute;
    width: 0;
    height: 0;
    @if not index("top" "bottom" "left" "right", $position) {
        @warn $position + " is not a valid value, the default (top) is used.";
        $position: "top";
    }
    border: $size solid transparent;
    @if $inset == false {
        @if $position == "top" {
            $position: "bottom";
        } @else if $position == "bottom" {
            $position: "top";
        } @else if $position == "left" {
            $position: "right";
        } @else if $position == "right" {
            $position: "left";
        }
    }
    border-#{$position}: $size solid $color;
    #{$position}: 0;
}

// MENU BAR
// Usage:
// $menuHeight: 48px;
// .menu{
//     // Menu styling here
//     @include menuBar($menuHeight);
//     &__link{
//         // Link styling here
//         @include menuItem(){
//             // Hover styling here
//         };
//     }
// }
@mixin menuBar($height){
    height: $height;
    display: flex;
}
@mixin menuItem(){
    height: 100%;
    @extend %flexCenter;
    &:hover{
        @content;
    }
}

// INPUT WITH BUTTON
// Usage HTML:
// 
// HTML Snippet: sass_inputWithButton
// 
// or copy/paste HTML:
// 
// (replace search in classes with whichever parentClassName you want
//      Child classes required (BEM convention):
//          parentClassName__input
//          parentClassName__button
//          parentClassName__icon)
// 
// <form action="" class="search">
//     <input class="search__input" type="text" name="keyword" placeholder="Indtast søgeord">
//     <button class="search__button">
//         <svg class="search__icon" viewBox="0 0 24 24"><path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"></path></svg>
//         Søg
//     </button>
// </form>
// 
// Usage SASS:
// 
// @include inputWithButton(
//     buttonColor,
//     iconColor,
//     backgroundColor_white,
//     borderColor_null,
//     borderRadius_5px,
//     height_48px,
//     buttonWidth_height_x_2
// );
@mixin inputWithButton(
    $buttonColor,
    $iconColor,
    $backgroundColor: white,
    $borderColor: null,
    $borderRadius: 5px,
    $height: 48px,
    $buttonWidth: $height * 2
){
    $buttonColorHover: contrast($buttonColor, 5);
    $iconColorHover: contrast($iconColor, 5);
    height: $height;
    @extend %flexCenterVertical;
    &__input{
        width: 100%;
        height: 100%;
        padding: 0;
        @if $borderColor{
            border: 1px solid $borderColor;
        } @else{
            border: none;
        }
        border-right: none;
        border-radius: $borderRadius 0 0 $borderRadius;
        background-color: $backgroundColor;
        padding: 0.75em;
        box-sizing: border-box;
        &::placeholder{
            color: #acacac;
        }
    }
    &__button{
        width: $buttonWidth;
        height: 100%;
        padding: 0;
        @if $borderColor{
            border: 1px solid $borderColor;
        } @else{
            border: none;
        }
        border-left: none;
        border-radius: 0 $borderRadius $borderRadius 0;
        background-color: $buttonColor;
        @extend %flexCenter;
        color: $iconColor;
        cursor: pointer;
        transition: background-color 300ms;
        &:hover{
            color: $iconColorHover;
            background-color: $buttonColorHover;
        }
    }
    &__icon{
        height: 65%;
        fill: $iconColor;
        transition: fill 300ms;
    }
    &__button:hover &__icon{
        fill: $iconColorHover;
    }
}

// BUTTON WITH ICON
// Snippet: sass_buttonWithIcon
// or:
// <a href="#" class="button">
//     <svg class="button__icon" viewBox="0 0 24 24"><path d="M20,8L12,13L4,8V6L12,11L20,6M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z"></path></svg>
//     <span class="button__text">Email</span>
// </a>
// 
// Usage:
// @include buttonWithIcon(48px, midnightblue){
//     // Styling examples:
//     text-decoration: none;
//     min-width: 120px;
// };
// 
// (Automatically sets the font color, but you can set it manually as the third argument)
// @include buttonWithIcon(48px, midnightblue, lightblue){
//     // Styling examples:
//     text-decoration: none;
//     border-radius: 3px;
//     border-bottom: 4px solid contrast(lightblue, 35);
//     transition: color 300ms, background-color 300ms;
// };
// 
// With the fourth argument set to true, the icon is placed to the right:
// @include buttonWithIcon(48px, midnightblue, lightblue, true);
// or if the third argument is left out:
// @include buttonWithIcon(48px, midnightblue, $iconRight: true);
@mixin buttonWithIcon($height, $backgroundColor, $color: contrast($backgroundColor, 75), $iconRight: false){
    height: $height;
    background-color: $backgroundColor;
    padding: 0 $height / 3;
    display: grid;
    grid-template-columns: if($iconRight, auto $height / 2, $height / 2 auto);
    gap: $height / 4;
    align-items: center;
    @content;
    &__icon{
        @if $iconRight{
            order: 1;
        }
        width: 100%;
        fill: $color;
    }
    &__text{
        @if $iconRight{
            order: 0;
        }
        color: $color;
        font-size: $height / 3;
        text-align: center;
    }
    &:hover{
        color: contrast($color);
        background-color: contrast($backgroundColor);
    }
    &:hover &__icon{
        fill: contrast($color);
    }
}